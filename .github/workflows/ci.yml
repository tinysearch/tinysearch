name: CI

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  schedule:
    # Runs every Thursday at 20:23 GMT to avoid bit rot
    - cron: "20 23 * * 4"
  release:
    types: 
      - edited
      - published

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
            rust: [stable, beta, nightly]

    steps:
      - uses: actions/checkout@v1

      - name: Set Rust version
        env:
          RUST_VERSION: ${{ matrix.rust }}
        run: rustup default ${RUST_VERSION}

      - if: matrix.rust == 'stable'
        run: rustup component add clippy

      - if: matrix.rust == 'stable'
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: Install wasm-pack
        run:
          cargo install --force --git https://github.com/mre/wasm-pack.git --branch first-class-bins

      - name: Print wasm-pack version
        run: wasm-pack --version

      - name: Build and install tinysearch
        run: cargo install --force --path bin

      - name: Build WASM package from test index
        run: RUST_LOG=debug tinysearch fixtures/index.json

      - name: Audit for Security Vulnerabilities
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --no-deps

  publish-check:
    if: startsWith(github.ref, 'refs/tags/') != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      # Note that we don't check `bin` here as it depends on `shared`
      # to be published (which we don't do during dry-run).
      # This could be fixed by allowing publish relative paths.
      # https://github.com/rust-lang/cargo/issues/6738
      # https://github.com/rust-lang/cargo/issues/1565
      - name: Publish check for shared
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --dry-run --manifest-path shared/Cargo.toml
          
  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      - name: Publish shared
        uses: actions-rs/cargo@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          command: publish
          args: --manifest-path shared/Cargo.toml

      # The crates.io API might be delayed by a few seconds.
      # As a result, the newly published `shared` might not be
      # published when the binary that depends on it wants to pull it.
      # Wait a few seconds to avoid that race-condition.
      - name: Wait for cargo publication
        uses: juliangruber/sleep-action@v1
        with:
          time: 30s

      - name: Publish binary
        uses: actions-rs/cargo@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          command: publish
          args: --manifest-path bin/Cargo.toml
          
      - name: Create Github release for Linux, Windows, and macOS
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: target/release/tinysearch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
